#!/usr/bin python
# -*- coding: utf-8 -*-
# previously: /usr/bin/env python

'''
    last edit Dec-17, 2024 (EOC)

    execute:
    ------------

    git pull && python ./macros/execute_skim --fdebug=4 --no-email --NeventsMax=100
    
    execute_skim --Ebeam=10.4 --Nruns=1 --fdebug=2 --FirstEvent=10 --NeventsMax=10 --no-email

    
    comments
    ------------
'''

import sys, os, linecache
import argparse

parser = argparse.ArgumentParser(description='Skim multiple runs')
parser.add_argument("--Nruns",        type=int, default=1,
                    required=False, help="number of runs to process ('-1' for all runs)")
parser.add_argument("--FirstRun",     type=int, default=0,
                    required=False, help="first run to start from")
parser.add_argument("--NeventsMax",   type=int, default=10,
                    required=False, help="maximal number of events to process")
parser.add_argument("--fdebug",       type=int, default=1,
                    required=False, help="verbosity")
parser.add_argument("--PrintProgress",type=int, default=500000,
                    required=False, help="print progress (every N events)")
parser.add_argument("--no-email",   dest="no_email",
                    default=True,  required=False,
                    action='store_true', help="do not send email")
parser.add_argument("--FirstEvent",     type=int, default=0,
                    required=False, help="first event to start from")
parser.add_argument("--DataPath",     type=str, default="sidisdvcs",
                    required=False,
                    help="inc, sidisdvcs, nSidis, AcceptanceCorrection")
parser.add_argument("--Ebeam",     type=float, default=10.2,
                    required=False, help="beam energy")

args = parser.parse_args()

Nruns         = args.Nruns
NeventsMax    = args.NeventsMax
fdebug        = args.fdebug
PrintProgress = args.PrintProgress
FirstRun      = args.FirstRun
FirstEvent    = args.FirstEvent
DataPath      = args.DataPath
Ebeam         = args.Ebeam

# print each event for a small number of events
if PrintProgress > NeventsMax: PrintProgress = 1

if Ebeam == 10.2:
    runs_filename = "runlists/good_runs_10-2-final.txt"
elif Ebeam == 10.4:
    runs_filename = "runlists/good_runs_10-4.txt"
elif Ebeam == 10.6:
    runs_filename = "runlists/good_runs_10-6.txt"


runs_file = open(runs_filename, 'r')
run_fileLines = runs_file.readlines();
if Nruns<0: Nruns = len(run_fileLines)
if fdebug>1:#{
    print('good runs to process:')
    for line in run_fileLines[FirstRun:]:#{
        print(int(line.strip()), end =" ")
    #}
    print('')
    print('processing %d runs, starting from run %d, event %d'%(Nruns-FirstRun,FirstRun, FirstEvent))
#}


runIdx = 0
for line in run_fileLines[FirstRun:]:#{
    runIdx += 1
    run = int(line.strip())
    
    print("")
    print("processing run %d/%d"%(runIdx,Nruns))
    print("FirstEvent:",FirstEvent);
    print("NeventsMax:",NeventsMax)
    print("PrintProgress:", PrintProgress)
    print("DataPath:",DataPath)
    print("Ebeam:",Ebeam)
    print("fdebug:",fdebug)
    
    print("")
    
    commandline = ("clas12root -q 'c12rSkimmer_BranchingRatios.C+(%d,%d,%d,%d,\"%s\",%f,%d)'"%
                    (run,FirstEvent,NeventsMax,PrintProgress,DataPath,Ebeam,fdebug))
    print(commandline)
        
    os.system( commandline )
    print('Done run',runIdx,'from',Nruns,'runs')
    if (runIdx >= Nruns): break;
    print('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')
    print('------------------------------------------------------------')
#}

print('')
print('done execute skim.')
print('')
if args.no_email==False:#{
    mailtitle = 'Done processing execute_skim'
    mailbody  = ('Processed %s - %d runs, see ....'%( DataPath, Nruns))
    emailstr = ('echo %s | mail -s %s cohen.erez7@gmail.com'%(mailbody,mailtitle) )
    os.system(emailstr)
#}


